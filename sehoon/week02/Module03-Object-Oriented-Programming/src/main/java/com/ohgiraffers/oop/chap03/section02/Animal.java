package com.ohgiraffers.oop.chap03.section02;

/*
 * ==============================================
 *  🏆 [응용] super 키워드와 메서드 오버라이딩
 * ==============================================
 *
 * 💡 super 키워드:
 * - 자식 클래스에서 부모 클래스의 멤버(생성자, 메서드)에 접근할 때 사용한다.
 *
 * 💡 메서드 오버라이딩(Overriding):
 * - 부모 클래스로부터 상속받은 메서드를 자식 클래스에서 '재정의'하는 것이다.
 *
 * 💡 final 키워드:
 * - 클래스, 메서드, 변수에 사용되어 변경 불가능함을 명시한다.
 * - final 클래스: 상속할 수 없다. (예: String 클래스)
 * - final 메서드: 오버라이딩할 수 없다.
 *
 * 1. 오버로딩 (Overloading)
 * 하나의 클래스 내에서 동일한 이름을 가진 여러 개의 메서드를 정의하는 것을 말한다.
 * 위치: 메서드들이 모두 같은 클래스 내에 존재합니다.
 * 규칙:
 * - 메서드 이름은 동일해야 한다.
 * - 메서드의 시그니처(매개변수의 개수, 타입 또는 순서)는 반드시 달라야 한다.
 *   (반환 타입은 오버로딩에 영향을 주지 않는다.)
 * 목적: 하나의 메서드 이름만으로 다양한 형태의 인자를 처리하며 여러 기능을 제공하여,
 *       코드의 일관성과 사용 편의성을 높이는 데 있다.
 *
 *
 * 2. 오버라이딩 (Overriding)
 * 부모 클래스로부터 상속받은 메서드를 자식 클래스에서 재정의(override)하는 것을 의미한다.
 * 위치: 부모 클래스와 상속 관계에 있는 자식 클래스에 각각 존재한다.
 * 규칙:
 * - 재정의하는 메서드는 부모 클래스 메서드와 이름, 매개변수 목록, 반환 타입이 모두 동일해야 한다.
 * - 접근 제한자는 부모 메서드보다 같거나 더 넓은 범위로 지정할 수 있다.
 * - 예외는 부모 메서드의 예외보다 더 적거나 같아야 한다.
 * 목적: 부모 클래스의 기능을 자식 클래스의 특성이나 필요에 맞게 확장하거나 변경하여, 다형성(Polymorphism)을 구현하는 데 있다.
 */
public class Animal {
    protected String name;

    public Animal(String name) {
        this.name = name;
    }

    public void makeSound() {
        System.out.println("동물이 울음소리를 낸다.");
    }

}
